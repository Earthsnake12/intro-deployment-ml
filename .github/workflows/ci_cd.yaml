name: Continuous Integration/Continuous Deployment
on: 
  push:
    branches:
      - workflow_CI-CD
  #    - main 
  #workflow_run:
  #  workflows: ["Continuous Training"]
  #  branches: [main]
  #  types:
  #    - completed
  workflow_dispatch:
    inputs:
      reason:
        description: Why to run this?
        required: false
        default: running CI/CD
jobs:
  ci_cd:
    runs-on: ubuntu-latest
    env:
    #  REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }} #seria servidor/nombreProyecto/nombreDeCloud pero es mas para darle orden
    #  REGION: ${{ secrets.REGION }} region del servidor
    #  PROJECT_ID: ${{ secrets.PROJECT_ID }} el ID del cloud
    #  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}nombre del servicio del colud
      GDRIVE_CREDENTIALS_DATA: ${{ secrets.SERVICE_ACCOUNT_KEY }}
    #  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Set environment and bring the model
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
      
      - name: Cargando el modelo
        run: | 
          pip install dvc[gdrive]
          pip install --upgrade pyopenssl
          dvc pull model/model.pkl.dvc -r traker
      
      #- name: Build and Push
      #  run: |
      #    docker build . -t ghcr.io/earthsnake12/prueba:last
      
      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ignaciomilesi/prueba-ci-cd:latest
      
      #- name: Docker push
      #  run: |
      #    docker push ghcr.io/earthsnake12/prueba:last
      
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: "${{ secrets.KOYEB_TOKEN }}"
          github_token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Deploy to Koyeb
        run: koyeb service redeploy app_name/service_name

     